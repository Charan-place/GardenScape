{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHARAN\\\\OneDrive\\\\Desktop\\\\4-1\\\\Garden\\\\frontend\\\\src\\\\components\\\\ServicesDisplay\\\\ServicesDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServicesDisplay() {\n  _s();\n  const [services, setServices] = useState([]);\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/services');\n        setServices(response.data);\n      } catch (error) {\n        alert('Error fetching services: ' + error.message);\n      }\n    };\n    fetchServices();\n  }, []);\n  const handleBookService = async service => {\n    const phoneNumber = prompt('Enter your phone number:');\n    const email = prompt('Enter your email:');\n    if (phoneNumber && email) {\n      try {\n        const response = await axios.post('http://localhost:5000/book-service', {\n          serviceId: service.id,\n          phoneNumber,\n          email\n        });\n        alert(response.data.message);\n      } catch (error) {\n        alert('Error booking service: ' + error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"services-display-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), services.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No services available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : services.map(service => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"service-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: service.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Actions Done: \", service.actionsDone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cost: $\", service.cost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: service.imageUrl,\n        alt: service.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBookService(service),\n        children: \"Book Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, service.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ServicesDisplay, \"6zIv7VYIWrxuvR7GDZce08FfVgw=\");\n_c = ServicesDisplay;\nexport default ServicesDisplay;\nvar _c;\n$RefreshReg$(_c, \"ServicesDisplay\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ServicesDisplay","_s","services","setServices","fetchServices","response","get","data","error","alert","message","handleBookService","service","phoneNumber","prompt","email","post","serviceId","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","name","actionsDone","cost","src","imageUrl","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/CHARAN/OneDrive/Desktop/4-1/Garden/frontend/src/components/ServicesDisplay/ServicesDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ServicesDisplay() {\r\n  const [services, setServices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchServices = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/services');\r\n        setServices(response.data);\r\n      } catch (error) {\r\n        alert('Error fetching services: ' + error.message);\r\n      }\r\n    };\r\n\r\n    fetchServices();\r\n  }, []);\r\n\r\n  const handleBookService = async (service) => {\r\n    const phoneNumber = prompt('Enter your phone number:');\r\n    const email = prompt('Enter your email:');\r\n    if (phoneNumber && email) {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/book-service', {\r\n          serviceId: service.id,\r\n          phoneNumber,\r\n          email,\r\n        });\r\n        alert(response.data.message);\r\n      } catch (error) {\r\n        alert('Error booking service: ' + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"services-display-container\">\r\n      <h2>Available Services</h2>\r\n      {services.length === 0 ? (\r\n        <p>No services available.</p>\r\n      ) : (\r\n        services.map(service => (\r\n          <div key={service.id} className=\"service-card\">\r\n            <h4>{service.name}</h4>\r\n            <p>Actions Done: {service.actionsDone}</p>\r\n            <p>Cost: ${service.cost}</p>\r\n            <img src={service.imageUrl} alt={service.name} />\r\n            <button onClick={() => handleBookService(service)}>Book Service</button>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ServicesDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}