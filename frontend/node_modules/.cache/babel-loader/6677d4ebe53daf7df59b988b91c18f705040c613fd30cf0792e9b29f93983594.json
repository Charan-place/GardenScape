{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHARAN\\\\OneDrive\\\\Desktop\\\\4-1\\\\Garden\\\\frontend\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import './Login.css';\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleLogin = async () => {\n//     setError('');\n//     if (!username || !password) {\n//       setError('Please enter both username and password.');\n//       return;\n//     }\n\n//     setLoading(true);\n//     try {\n//       const response = await axios.post('http://localhost:5000/login', { username, password });\n//       if (response.data.token) {\n//         localStorage.setItem('token', response.data.token);\n//         navigate('/'); // Redirect to home page after successful login\n//       } else {\n//         setError('Invalid credentials');\n//       }\n//     } catch (error) {\n//       setError('Login failed');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h2>Login</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Username\"\n//         value={username}\n//         onChange={(e) => setUsername(e.target.value)}\n//       />\n//       <input\n//         type=\"password\"\n//         placeholder=\"Password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//       />\n//       <button onClick={handleLogin} disabled={loading}>\n//         {loading ? 'Logging in...' : 'Login'}\n//       </button>\n//       <p>\n//         Don't have an account? <a href=\"/signup\">Signup here</a>\n//       </p>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault(); // Prevent the default form submission\n    setError(''); // Clear previous error messages\n\n    // Check if username and password are provided\n    if (!username || !password) {\n      setError('Please enter both username and password.');\n      return;\n    }\n    setLoading(true); // Start loading state\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      // Check if the token is returned in the response\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token); // Store token in localStorage\n        localStorage.setItem('userEmail', username); // Optional: Store user email if needed\n        navigate('/'); // Redirect to home page after successful login\n      } else {\n        setError('Invalid credentials'); // Set error for invalid credentials\n      }\n    } catch (error) {\n      if (error.response) {\n        // Handle errors from the server\n        setError(error.response.data || 'Login failed'); // Use server response or default message\n      } else {\n        // Handle errors not from the server (e.g., network issues)\n        setError('Login failed, please try again later.');\n      }\n    } finally {\n      setLoading(false); // End loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/signup\",\n        children: \"Signup here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"lmS7rJqCwMH7RxoRYpQi9m7laZ0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","loading","setLoading","navigate","handleLogin","e","preventDefault","response","post","data","token","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","placeholder","value","onChange","target","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/CHARAN/OneDrive/Desktop/4-1/Garden/frontend/src/components/Login/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Login.css';\r\n\r\n// function Login() {\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async () => {\r\n//     setError('');\r\n//     if (!username || !password) {\r\n//       setError('Please enter both username and password.');\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await axios.post('http://localhost:5000/login', { username, password });\r\n//       if (response.data.token) {\r\n//         localStorage.setItem('token', response.data.token);\r\n//         navigate('/'); // Redirect to home page after successful login\r\n//       } else {\r\n//         setError('Invalid credentials');\r\n//       }\r\n//     } catch (error) {\r\n//       setError('Login failed');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <h2>Login</h2>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Username\"\r\n//         value={username}\r\n//         onChange={(e) => setUsername(e.target.value)}\r\n//       />\r\n//       <input\r\n//         type=\"password\"\r\n//         placeholder=\"Password\"\r\n//         value={password}\r\n//         onChange={(e) => setPassword(e.target.value)}\r\n//       />\r\n//       <button onClick={handleLogin} disabled={loading}>\r\n//         {loading ? 'Logging in...' : 'Login'}\r\n//       </button>\r\n//       <p>\r\n//         Don't have an account? <a href=\"/signup\">Signup here</a>\r\n//       </p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault(); // Prevent the default form submission\r\n    setError(''); // Clear previous error messages\r\n\r\n    // Check if username and password are provided\r\n    if (!username || !password) {\r\n      setError('Please enter both username and password.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // Start loading state\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/login', { username, password });\r\n      // Check if the token is returned in the response\r\n      if (response.data.token) {\r\n        localStorage.setItem('token', response.data.token); // Store token in localStorage\r\n        localStorage.setItem('userEmail', username); // Optional: Store user email if needed\r\n        navigate('/'); // Redirect to home page after successful login\r\n      } else {\r\n        setError('Invalid credentials'); // Set error for invalid credentials\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // Handle errors from the server\r\n        setError(error.response.data || 'Login failed'); // Use server response or default message\r\n      } else {\r\n        // Handle errors not from the server (e.g., network issues)\r\n        setError('Login failed, please try again later.');\r\n      }\r\n    } finally {\r\n      setLoading(false); // End loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Display error message */}\r\n      <form onSubmit={handleLogin}> {/* Use form submission */}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Logging in...' : 'Login'}\r\n        </button>\r\n      </form>\r\n      <p>\r\n        Don't have an account? <a href=\"/signup\">Signup here</a>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}