{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHARAN\\\\OneDrive\\\\Desktop\\\\4-1\\\\Garden\\\\frontend\\\\src\\\\components\\\\MyOrders\\\\MyOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyOrders = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Assuming you store the token in localStorage\n        const response = await axios.get('http://localhost:5000/my-orders', {\n          headers: {\n            Authorization: `Bearer ${token}` // Ensure the token is sent with the request\n          }\n        });\n        const formattedOrders = response.data.map(order => {\n          var _order$serviceId;\n          return {\n            serviceName: ((_order$serviceId = order.serviceId) === null || _order$serviceId === void 0 ? void 0 : _order$serviceId.serviceName) || 'Unknown Service',\n            // Use optional chaining to handle undefined values\n            status: order.status || 'Pending',\n            // Show status or default to Pending\n            createdAt: new Date(order.createdAt).toLocaleString() // Format the created date\n          };\n        });\n        setOrders(formattedOrders); // Set the orders in state\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    };\n    fetchOrders(); // Fetch the orders when the component mounts\n  }, []); // Empty dependency array means this will run once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No orders found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : orders.map((order, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Service: \", order.serviceName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", order.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", order.createdAt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(MyOrders, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = MyOrders;\nexport default MyOrders;\nvar _c;\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MyOrders","_s","orders","setOrders","fetchOrders","token","localStorage","getItem","response","get","headers","Authorization","formattedOrders","data","map","order","_order$serviceId","serviceName","serviceId","status","createdAt","Date","toLocaleString","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","_c","$RefreshReg$"],"sources":["C:/Users/CHARAN/OneDrive/Desktop/4-1/Garden/frontend/src/components/MyOrders/MyOrders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MyOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token'); // Assuming you store the token in localStorage\r\n        const response = await axios.get('http://localhost:5000/my-orders', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Ensure the token is sent with the request\r\n          },\r\n        });\r\n\r\n        const formattedOrders = response.data.map(order => ({\r\n          serviceName: order.serviceId?.serviceName || 'Unknown Service', // Use optional chaining to handle undefined values\r\n          status: order.status || 'Pending', // Show status or default to Pending\r\n          createdAt: new Date(order.createdAt).toLocaleString(), // Format the created date\r\n        }));\r\n\r\n        setOrders(formattedOrders); // Set the orders in state\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    };\r\n\r\n    fetchOrders(); // Fetch the orders when the component mounts\r\n  }, []); // Empty dependency array means this will run once on component mount\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Orders</h1>\r\n      <ul>\r\n        {orders.length === 0 ? (\r\n          <p>No orders found.</p>\r\n        ) : (\r\n          orders.map((order, index) => (\r\n            <li key={index}>\r\n              <p>Service: {order.serviceName}</p>\r\n              <p>Status: {order.status}</p>\r\n              <p>Date: {order.createdAt}</p>\r\n            </li>\r\n          ))\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyOrders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}