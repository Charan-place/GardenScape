{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHARAN\\\\OneDrive\\\\Desktop\\\\4-1\\\\Garden\\\\frontend\\\\src\\\\components\\\\MyOrders\\\\MyOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './MyOrders.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyOrders = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Assuming you store the token in localStorage\n        const response = await axios.get('http://localhost:5000/my-orders', {\n          headers: {\n            Authorization: `Bearer ${token}` // Ensure the token is sent with the request\n          }\n        });\n\n        // Filter to include only pending and accepted orders\n        const filteredOrders = response.data.filter(order => order.status === 'Pending' || order.status === 'Accepted');\n        const formattedOrders = filteredOrders.map(order => ({\n          serviceName: order.serviceName || 'Unknown Service',\n          area: order.area || 'N/A',\n          // Assuming 'area' is part of your order schema\n          specialRequests: order.specialRequests || 'None',\n          // Assuming 'specialRequests' is part of your order schema\n          actionOne: order.actionOne,\n          actionTwo: order.actionTwo,\n          cost: order.cost,\n          status: order.status || 'Pending',\n          createdAt: new Date(order.createdAt).toLocaleString()\n        }));\n        console.log('Fetched orders:', formattedOrders); // Debugging log\n\n        setOrders(formattedOrders); // Set the orders in state\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    };\n    fetchOrders(); // Fetch the orders when the component mounts\n  }, []); // Empty dependency array means this will run once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-list\",\n      children: orders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No orders found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : orders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Service: \", order.serviceName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Area: \", order.area, \" sq ft\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Special Requests: \", order.specialRequests]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Action One: \", order.actionOne]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Action Two: \", order.actionTwo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Cost: $\", order.cost]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", order.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", order.createdAt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(MyOrders, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = MyOrders;\nexport default MyOrders;\nvar _c;\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MyOrders","_s","orders","setOrders","fetchOrders","token","localStorage","getItem","response","get","headers","Authorization","filteredOrders","data","filter","order","status","formattedOrders","map","serviceName","area","specialRequests","actionOne","actionTwo","cost","createdAt","Date","toLocaleString","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","_c","$RefreshReg$"],"sources":["C:/Users/CHARAN/OneDrive/Desktop/4-1/Garden/frontend/src/components/MyOrders/MyOrders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './MyOrders.css'; // Import CSS file for styling\r\n\r\nconst MyOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token'); // Assuming you store the token in localStorage\r\n        const response = await axios.get('http://localhost:5000/my-orders', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Ensure the token is sent with the request\r\n          },\r\n        });\r\n\r\n        // Filter to include only pending and accepted orders\r\n        const filteredOrders = response.data.filter(order => \r\n          order.status === 'Pending' || order.status === 'Accepted'\r\n        );\r\n\r\n        const formattedOrders = filteredOrders.map(order => ({\r\n          serviceName: order.serviceName || 'Unknown Service',\r\n          area: order.area || 'N/A', // Assuming 'area' is part of your order schema\r\n          specialRequests: order.specialRequests || 'None', // Assuming 'specialRequests' is part of your order schema\r\n          actionOne: order.actionOne,\r\n          actionTwo: order.actionTwo,\r\n          cost: order.cost,\r\n          status: order.status || 'Pending',\r\n          createdAt: new Date(order.createdAt).toLocaleString(),\r\n        }));\r\n\r\n        console.log('Fetched orders:', formattedOrders); // Debugging log\r\n\r\n        setOrders(formattedOrders); // Set the orders in state\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    };\r\n\r\n    fetchOrders(); // Fetch the orders when the component mounts\r\n  }, []); // Empty dependency array means this will run once on component mount\r\n\r\n  return (\r\n    <div className=\"orders-container\">\r\n      <h1>My Orders</h1>\r\n      <div className=\"orders-list\">\r\n        {orders.length === 0 ? (\r\n          <p>No orders found.</p>\r\n        ) : (\r\n          orders.map((order, index) => (\r\n            <div key={index} className=\"order-card\">\r\n              <h3>Service: {order.serviceName}</h3>\r\n              <p>Area: {order.area} sq ft</p>\r\n              <p>Special Requests: {order.specialRequests}</p>\r\n              <p>Action One: {order.actionOne}</p>\r\n              <p>Action Two: {order.actionTwo}</p>\r\n              <p>Cost: ${order.cost}</p>\r\n              <p>Status: {order.status}</p>\r\n              <p>Date: {order.createdAt}</p>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyOrders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}