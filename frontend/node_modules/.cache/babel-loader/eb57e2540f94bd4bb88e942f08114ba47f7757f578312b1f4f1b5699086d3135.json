{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHARAN\\\\OneDrive\\\\Desktop\\\\4-1\\\\Garden\\\\frontend\\\\src\\\\components\\\\MyOrders\\\\MyOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './MyOrders.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyOrders = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/my-orders');\n        const formattedOrders = response.data.map(order => {\n          var _order$serviceId, _order$serviceId2, _order$serviceId3;\n          return {\n            serviceName: ((_order$serviceId = order.serviceId) === null || _order$serviceId === void 0 ? void 0 : _order$serviceId.serviceName) || 'Unknown Service',\n            serviceImage: ((_order$serviceId2 = order.serviceId) === null || _order$serviceId2 === void 0 ? void 0 : _order$serviceId2.image) || '',\n            // Assuming image field exists in the service model\n            serviceDescription: ((_order$serviceId3 = order.serviceId) === null || _order$serviceId3 === void 0 ? void 0 : _order$serviceId3.description) || 'No description available',\n            // Assuming description field\n            status: order.status || 'Pending',\n            createdAt: order.createdAt || 'Unknown Date'\n          };\n        });\n        setOrders(formattedOrders);\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    };\n    fetchOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-orders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-grid\",\n      children: orders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/uploads/${order.serviceImage}`,\n          alt: order.serviceName,\n          className: \"service-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: order.serviceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: order.serviceDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: order.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Order Date: \", new Date(order.createdAt).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(MyOrders, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = MyOrders;\nexport default MyOrders;\nvar _c;\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MyOrders","_s","orders","setOrders","fetchOrders","response","get","formattedOrders","data","map","order","_order$serviceId","_order$serviceId2","_order$serviceId3","serviceName","serviceId","serviceImage","image","serviceDescription","description","status","createdAt","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","src","alt","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/CHARAN/OneDrive/Desktop/4-1/Garden/frontend/src/components/MyOrders/MyOrders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './MyOrders.css'; // Assuming you have a CSS file for styling\r\n\r\nconst MyOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/my-orders');\r\n        const formattedOrders = response.data.map(order => ({\r\n          serviceName: order.serviceId?.serviceName || 'Unknown Service',\r\n          serviceImage: order.serviceId?.image || '', // Assuming image field exists in the service model\r\n          serviceDescription: order.serviceId?.description || 'No description available', // Assuming description field\r\n          status: order.status || 'Pending',\r\n          createdAt: order.createdAt || 'Unknown Date',\r\n        }));\r\n        setOrders(formattedOrders);\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    };\r\n\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"my-orders-container\">\r\n      <h1>My Orders</h1>\r\n      <div className=\"orders-grid\">\r\n        {orders.map((order, index) => (\r\n          <div key={index} className=\"order-card\">\r\n            <img src={`http://localhost:5000/uploads/${order.serviceImage}`} alt={order.serviceName} className=\"service-image\" />\r\n            <div className=\"order-details\">\r\n              <h2>{order.serviceName}</h2>\r\n              <p>{order.serviceDescription}</p>\r\n              <p>Status: <strong>{order.status}</strong></p>\r\n              <p>Order Date: {new Date(order.createdAt).toLocaleDateString()}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyOrders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}