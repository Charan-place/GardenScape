{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHARAN\\\\OneDrive\\\\Desktop\\\\4-1\\\\Garden\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false); // Loading state\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleLogin = async () => {\n    setError(''); // Clear any previous error messages\n    if (!username || !password) {\n      setError('Please enter both username and password.');\n      return;\n    }\n    setLoading(true); // Set loading state to true\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      alert(response.data.message);\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        navigate('/'); // Redirect to home page on successful login\n      }\n    } catch (error) {\n      if (error.response) {\n        alert(error.response.data.message || 'Login failed');\n      } else {\n        alert('Login failed: ' + error.message);\n      }\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      disabled: loading,\n      children: [\" \", loading ? 'Logging in...' : 'Login']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"lmS7rJqCwMH7RxoRYpQi9m7laZ0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","loading","setLoading","navigate","handleLogin","response","post","alert","data","message","token","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/CHARAN/OneDrive/Desktop/4-1/Garden/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n  const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n  const handleLogin = async () => {\r\n    setError(''); // Clear any previous error messages\r\n    if (!username || !password) {\r\n      setError('Please enter both username and password.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // Set loading state to true\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/login', { username, password });\r\n      alert(response.data.message);\r\n\r\n      if (response.data.token) {\r\n        localStorage.setItem('token', response.data.token);\r\n        navigate('/'); // Redirect to home page on successful login\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        alert(error.response.data.message || 'Login failed');\r\n      } else {\r\n        alert('Login failed: ' + error.message);\r\n      }\r\n    } finally {\r\n      setLoading(false); // Reset loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Display error message */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin} disabled={loading}> {/* Disable button when loading */}\r\n        {loading ? 'Logging in...' : 'Login'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}